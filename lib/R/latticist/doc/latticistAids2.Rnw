\documentclass{beamer}
\newcommand{\pkg}[1]{{\fontseries{b}\selectfont #1}}
\let\code=\texttt
\let\proglang=\textsf

\title{Latticist Aids2 demo}
\subtitle{A demonstration of the \pkg{latticist} package}
\author{Felix Andrews}
\date{November 2008}

% \VignetteIndexEntry{Latticist Aids2 demo}
% \VignettePackage{latticist}

\begin{document}

\SweaveOpts{engine=R,eps=FALSE,echo=FALSE,prefix.string=figs/Aids2,width=5,height=3.8}

<<preliminaries, echo=FALSE, results=hide>>=
library(latticist)
ltheme <- custom.theme.2()
ltheme$strip.background$col <- grey(7:1 / 8)
ltheme$strip.shingle$col <- grey(6:0 / 8)
lattice.options(default.theme = ltheme)
ps.options(pointsize = 12)
options(width = 45, continue = " ")
source("common.R")
## set up data object
library(MASS)
dat <- Aids2
datArg <- quote(Aids2)
## persistent variables
spec <- list()
plotCalls <- list()
plotNum <- 0
@

\begin{frame}<handout:0>
  \titlepage
\end{frame}

\section{Introduction}
\begin{frame}[fragile]
  \frametitle{Introduction}
  \setlength{\parindent}{3ex}

  \noindent
  The \pkg{latticist} package provides a graphical user interface for
  exploratory visualisation in \proglang{R}.
  It is primarily an interface to the \pkg{lattice}
  graphics system, but also produces displays from the \pkg{vcd}
  package for categorical data.

  While latticist is normally used interactively (as a GUI),
  this document gives a sequence of the plots produced, where each
  step can be taken in the graphical user interface.
  Note that the displays can be customised by editing the calls used
  to generate them (see appendix for full code).

  The dataset here is \code{Aids2}, available in the \pkg{MASS} package.
  The data are on patients diagnosed with AIDS in Australia up to 1991.
  Note \code{diag} and \code{death} are the dates of
  diagnosis and death, \code{status} is ``A'' alive or ``D'' dead at
  end of observation, and \code{T.categ} is the reported transmission
  category. \emph{-- from \code{?Aids2}}
\end{frame}


\section{Initial display}
\begin{frame}[fragile]
  \frametitle{Initial display}
<<eval=FALSE, echo=TRUE>>=
  spec <- list()
  latticist(Aids2, spec = spec)
@
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  print(eval(plotCalls[[plotNum]]))
@
\end{center}
\end{frame}


\section{Set x variable}
\begin{frame}[fragile]
  \frametitle{Set x variable}
<<echo=TRUE>>=
  spec$xvar <- "T.categ"
@
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  print(eval(plotCalls[[plotNum]]))
@
\end{center}
\end{frame}


\section{Set grouping variable}
\begin{frame}[fragile]
  \frametitle{Set grouping variable}
<<echo=TRUE>>=
  spec$groups <- "status"
  spec$subset <- "T.categ != 'hs'"
@
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  print(eval(plotCalls[[plotNum]]))
@
\end{center}
\end{frame}


\section{Set x and y variables (categoricals)}
\begin{frame}[fragile]
  \frametitle{Set x and y variables (categoricals)}
<<echo=TRUE>>=
  spec <- list(yvar = "T.categ", xvar = "status")
@
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  eval(plotCalls[[plotNum]])
@
\end{center}
\end{frame}


\section{Set x and y variables (mixed)}
\begin{frame}[fragile]
  \frametitle{Set x and y variables (categorical vs numeric)}
<<echo=TRUE>>=
  spec <- list(yvar = "T.categ", xvar = "age")
@
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  print(eval(plotCalls[[plotNum]]))
@
\end{center}
\end{frame}


\section{Time periods as segments}
\begin{frame}[fragile]
  \frametitle{Time periods as segments}
<<echo=TRUE>>=
  spec <- list(yvar = "jitter(age)", xvar = "diag",
               zvar = "death", doSegments = TRUE)
@
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  print(eval(plotCalls[[plotNum]]))
@
\end{center}
\end{frame}


\section{Set grouping variable}
\begin{frame}[fragile]
  \frametitle{Set grouping variable}
<<echo=TRUE>>=
  spec$groups <- "diag"
@ %$
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  print(eval(plotCalls[[plotNum]]))
@
\end{center}
\end{frame}


\section{Set conditioning variable}
\begin{frame}[fragile]
  \frametitle{Set conditioning variable}
<<echo=TRUE>>=
  spec$cond <- "T.categ"
@ %$
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  print(eval(plotCalls[[plotNum]]))
@
\end{center}
\end{frame}


\section{Set x and y variables (numerics) and subset}
\begin{frame}[fragile]
  \frametitle{Set x and y variables (numerics) and subset}
<<echo=TRUE>>=
  spec <- list(xvar = "age", yvar = "(death - diag)",
               subset = "status == 'D'", doHexbin = TRUE)
@
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  print(eval(plotCalls[[plotNum]]))
@
\end{center}
\end{frame}


\section{Set conditioning variable}
\begin{frame}[fragile]
  \frametitle{Set conditioning variable}
<<echo=TRUE>>=
  spec <- modifyList(spec, list(cond = "T.categ",
                                x.relation = "free",
                                doLines = FALSE))
@ %$
<<results=tex>>=
  plotNum <- plotNum + 1
  plotCalls[[plotNum]] <-
    latticistCompose(dat, spec = spec, datArg = datArg)
  writeCallAndRef(plotCalls[[plotNum]], plotNum)
@
\begin{center}
<<fig=TRUE>>=
  print(eval(plotCalls[[plotNum]]))
@
\end{center}
\end{frame}


\section{Details}
\begin{frame}[fragile]
  \frametitle{Details}

  The results in this document were obtained using \proglang{R}
  \Sexpr{paste(R.Version()[6:7], collapse = ".")} with the packages
  \pkg{latticist}
  \Sexpr{gsub("-", "--", packageDescription("latticist")$Version)#$},
  \pkg{lattice}
  \Sexpr{gsub("-", "--", packageDescription("lattice")$Version)#$},
  \pkg{latticeExtra}
  \Sexpr{gsub("-", "--", packageDescription("latticeExtra")$Version)#$},
  and \pkg{vcd}
  \Sexpr{gsub("-", "--", packageDescription("vcd")$Version)#$}.
  \proglang{R} itself and all packages used are available from
  CRAN at \url{http://CRAN.R-project.org/}.
  \bigskip

  For an excellent introduction to and coverage of Lattice:
  \begin{center}
  \begin{tabular}{|p{0.9\textwidth}|}
    \hline
    Sarkar, Deepayan (2008).
    \emph{Lattice: Multivariate Data Visualization with R},
    Springer. \url{http://lmdvr.r-forge.r-project.org/}\\
    \hline
  \end{tabular}
  \end{center}

  The mosaic displays from \pkg{vcd} are well described in:
  \begin{center}
  \begin{tabular}{|p{0.9\textwidth}|}
    \hline
    David Meyer, Achim Zeileis, and Kurt Hornik (2006).
    The Strucplot Framework: Visualizing Multi-Way Contingency
    Tables with vcd. \emph{Journal of Statistical Software}, 17(3),
    1--48. \url{http://www.jstatsoft.org/v17/i03/}\\
    \hline
  \end{tabular}
  \end{center}
\end{frame}


\section{Appendix: Code}

<<results=tex>>=
  writePlotCallsAppendix(plotCalls)
@

\end{document}


